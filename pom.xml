<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>

	<groupId>org.tinylog</groupId>
	<artifactId>TinyLogExtra</artifactId>
	<version>2.3-SNAPSHOT</version>
	<name>Tinylog extra parent</name>

	<modules>
		<module>tinylog-extra</module>
	</modules>

	<prerequisites>
		<maven>3.5.0</maven>
	</prerequisites>

	<properties>

		<website.url>https://tinylog.org/</website.url>
		<builder.name>tinylog.org</builder.name>

		<git.url>https://github.com/git5000/tinylogextra</git.url>
		<git.connection>scm:git:github.com/git5000/tinylogextra.git</git.connection>
		<git.developerConnection>scm:git:git@github.com:git5000/tinylogextra.git</git.developerConnection>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<animal-sniffer-maven-plugin.version>1.18</animal-sniffer-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
		<spotbugs-maven-plugin.version>4.0.0</spotbugs-maven-plugin.version>
		<maven-bundle-plugin.version>4.2.1</maven-bundle-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
		<maven-source-plugin.version>3.2.1</maven-source-plugin.version>
		<flatten-maven-plugin.version>1.2.2</flatten-maven-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<maven-site-plugin.version>3.9.0</maven-site-plugin.version>
		<maven-assembly-plugin.version>3.2.0</maven-assembly-plugin.version>
		<maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
		<exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
		<p2-maven-plugin.version>1.3.0</p2-maven-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
		<wagon-maven-plugin.version>2.0.0</wagon-maven-plugin.version>

		<wagon-ftp.version>3.2.0</wagon-ftp.version>

		<assertj-core.version>3.15.0</assertj-core.version>
		<assertj-db.version>1.3.0</assertj-db.version>
		<checkstyle.version>8.31</checkstyle.version>
		<commons-lang.version>3.10</commons-lang.version>
		<commons-logging.version>1.2</commons-logging.version>
		<dokka.version>0.10.1</dokka.version>
		<h2.version>1.4.200</h2.version>
		<java16.version>1.1</java16.version>
		<jboss-logging.version>3.4.1.Final</jboss-logging.version>
		<jmh.version>1.23</jmh.version>
		<junit.version>4.13</junit.version>
		<kotlin.version>1.3.71</kotlin.version>
		<lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
		<mockk.version>1.9.3</mockk.version>
		<powermock.version>2.0.7</powermock.version>
		<scala.version>2.12.11</scala.version>
		<slf4j.version>1.7.30</slf4j.version>

	</properties>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Martin Winandy</name>
			<email>martin.winandy@tinylog.org</email>
		</developer>
		<developer>
			<name>Git5000</name>
			<email>12895928+Git5000@users.noreply.github.com</email>
		</developer>
	</developers>

	<scm>
		<url>${git.url}</url>
		<connection>${git.connection}</connection>
		<developerConnection>${git.developerConnection}</developerConnection>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/git5000/tinylog/issues</url>
	</issueManagement>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<pluginRepositories>
		<pluginRepository>
			<id>jcenter</id>
			<name>JCenter</name>
			<url>https://jcenter.bintray.com/</url>
		</pluginRepository>
	</pluginRepositories>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Ensure that Eclipse and IntelliJ use Java 9 -->
				<maven.compiler.source>9</maven.compiler.source>
				<maven.compiler.target>9</maven.compiler.target>
				<maven.compiler.testSource>9</maven.compiler.testSource>
				<maven.compiler.testTarget>9</maven.compiler.testTarget>
				<!-- Skip Animal Sniffer plug-in by default as it cannot handle module-info class files on builds without clean goal -->
				<animal.sniffer.skip>true</animal.sniffer.skip>
			</properties>
		</profile>
		<profile>
			<id>release</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<!-- Real Java versions for clean release build -->
				<maven.compiler.source>1.6</maven.compiler.source>
				<maven.compiler.target>1.6</maven.compiler.target>
				<maven.compiler.testSource>9</maven.compiler.testSource>
				<maven.compiler.testTarget>9</maven.compiler.testTarget>
				<!-- Enable Animal Sniffer for release builds -->
				<animal.sniffer.skip>false</animal.sniffer.skip>
			</properties>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons-logging.version}</version>
			</dependency>
			<dependency>
				<groupId>io.mockk</groupId>
				<artifactId>mockk</artifactId>
				<version>${mockk.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj-core.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-db</artifactId>
				<version>${assertj-db.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-annotations</artifactId>
				<version>${animal-sniffer-maven-plugin.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jacoco</groupId>
				<artifactId>org.jacoco.agent</artifactId>
				<classifier>runtime</classifier>
				<version>${jacoco-maven-plugin.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito2</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4-rule</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-classloading-xstream</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.tinylog</groupId>
				<artifactId>tinylog-api</artifactId>
				<version>2.3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.tinylog</groupId>
				<artifactId>tinylog-impl</artifactId>
				<version>2.3-SNAPSHOT</version>
			</dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.8.6</version>
      </dependency>      
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>1.27</version>
      </dependency>      
		</dependencies>
	</dependencyManagement>

	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>${wagon-ftp.version}</version>
			</extension>
		</extensions>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<executions>
						<execution>
							<id>default-compile</id>
							<phase>compile</phase>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
						<execution>
							<id>compile-java-9</id>
							<phase>compile</phase>
							<goals>
								<goal>compile</goal>
							</goals>
							<configuration>
								<release>9</release>
								<compileSourceRoots>
									<compileSourceRoot>${project.basedir}/src/main/java9</compileSourceRoot>
								</compileSourceRoots>
								<multiReleaseOutput>true</multiReleaseOutput>
							</configuration>
						</execution>
						<execution>
							<id>default-testCompile</id>
							<phase>test-compile</phase>
							<goals>
								<goal>testCompile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>${scala-maven-plugin.version}</version>
					<configuration>
						<args>
							<arg>-g:line</arg>
						</args>
					</configuration>
					<executions>
						<execution>
							<id>compile</id>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
						<execution>
							<id>test-compile</id>
							<goals>
								<goal>testCompile</goal>
							</goals>
						</execution>
						<execution>
							<id>doc-jar</id>
							<goals>
								<goal>doc-jar</goal>
							</goals>
							<configuration>
								<skip>${maven.javadoc.skip}</skip>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>animal-sniffer-maven-plugin</artifactId>
					<version>${animal-sniffer-maven-plugin.version}</version>
					<configuration>
						<signature>
							<groupId>org.codehaus.mojo.signature</groupId>
							<artifactId>java16</artifactId>
							<version>${java16.version}</version>
						</signature>
					</configuration>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>default-instrument</id>
							<phase>process-test-classes</phase>
							<goals>
								<goal>instrument</goal>
							</goals>
						</execution>
						<execution>
							<id>default-restore-instrumented-classes</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>restore-instrumented-classes</goal>
							</goals>
						</execution>
						<execution>
							<id>default-report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<systemPropertyVariables>
							<jacoco-agent.destfile>${project.basedir}/target/jacoco.exec</jacoco-agent.destfile>
						</systemPropertyVariables>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${checkstyle.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
						<failOnViolation>true</failOnViolation>
						<violationSeverity>warning</violationSeverity>
						<configLocation>${project.parent.basedir}/configuration/checkstyle-checks.xml</configLocation>
						<propertyExpansion>workspace_loc=${project.parent.basedir}</propertyExpansion>
						<linkXRef>false</linkXRef>
					</configuration>
					<executions>
						<execution>
							<phase>verify</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.github.spotbugs</groupId>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<version>${spotbugs-maven-plugin.version}</version>
					<configuration>
						<effort>Max</effort>
						<threshold>Low</threshold>
						<includeTests>true</includeTests>
						<failOnError>true</failOnError>
						<excludeFilterFile>${project.parent.basedir}/configuration/spotbugs-filters.xml</excludeFilterFile>
					</configuration>
					<executions>
						<execution>
							<phase>verify</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>${maven-bundle-plugin.version}</version>
					<extensions>true</extensions>
					<configuration>
						<instructions>
							<_exportcontents>!META-INF.versions.9,*</_exportcontents>
							<Import-Package>!sun.reflect,*</Import-Package>
							<Require-Capability>osgi.ee;filter:="(&amp;(osgi.ee=JavaSE)(version=1.7))"</Require-Capability>
						</instructions>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
							<manifestEntries>
								<Built-By>${builder.name}</Built-By>
								<Multi-Release>true</Multi-Release>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
							<manifestEntries>
								<Built-By>${builder.name}</Built-By>
							</manifestEntries>
						</archive>
						<doctitle>${project.name} ${project.version}</doctitle>
						<javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
						<source>8</source>
						<!-- Set the Javadoc executable explicitly, if Maven cannot find it automatically -->
						<!-- <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable> -->
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jetbrains.dokka</groupId>
					<artifactId>dokka-maven-plugin</artifactId>
					<version>${dokka.version}</version>
					<configuration>
						<skip>${maven.javadoc.skip}</skip>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
							<manifestEntries>
								<Built-By>${builder.name}</Built-By>
							</manifestEntries>
						</archive>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>javadocJar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<configuration>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
							<manifestEntries>
								<Built-By>${builder.name}</Built-By>
							</manifestEntries>
						</archive>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
					<configuration>
						<pomElements>
							<name />
							<description />
							<url />
							<scm />
							<developers />
							<contributors />
							<issueManagement />
						</pomElements>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>flatten</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
					<configuration>
						<appendAssemblyId>false</appendAssemblyId>
						<outputDirectory>${project.parent.build.directory}</outputDirectory>
						<descriptors>
							<descriptor>${project.basedir}/distribution.xml</descriptor>
						</descriptors>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
					<executions>
						<execution>
							<phase>deploy</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${nexus-staging-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>default-deploy</id>
							<phase>deploy</phase>
							<goals>
								<goal>deploy</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
						<skipStaging>true</skipStaging>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
					<configuration>
						<executable>${java.home}/bin/java</executable>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.reficio</groupId>
					<artifactId>p2-maven-plugin</artifactId>
					<version>${p2-maven-plugin.version}</version>
					<inherited>false</inherited>
					<configuration>
						<artifacts>
							<artifact>
								<id>org.tinylog:tinylog-extra:${project.version}</id>
								<source>true</source>
							</artifact>
						</artifacts>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>wagon-maven-plugin</artifactId>
					<version>${wagon-maven-plugin.version}</version>
					<inherited>false</inherited>
					<configuration>
						<fromDir>${project.build.directory}/repository</fromDir>
						<includes>**/*</includes>
						<serverId>tinylog</serverId>
						<url>ftp://tinylog.org</url>
						<toDir>${project.version}</toDir>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
